// Mocks generated by Mockito 5.3.2 from annotations
// in leehs_brandi/test/repository.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:leehs_brandi/apis/apis.dart' as _i2;
import 'package:leehs_brandi/globals.dart' as _i3;
import 'package:leehs_brandi/repositories/repository.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeKakaoRestApi_0 extends _i1.SmartFake implements _i2.KakaoRestApi {
  _FakeKakaoRestApi_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeKakaoImageSearchResponse_1 extends _i1.SmartFake
    implements _i3.KakaoImageSearchResponse {
  _FakeKakaoImageSearchResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Repository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepository extends _i1.Mock implements _i4.Repository {
  @override
  _i2.KakaoRestApi get kakaoRestApi => (super.noSuchMethod(
        Invocation.getter(#kakaoRestApi),
        returnValue: _FakeKakaoRestApi_0(
          this,
          Invocation.getter(#kakaoRestApi),
        ),
        returnValueForMissingStub: _FakeKakaoRestApi_0(
          this,
          Invocation.getter(#kakaoRestApi),
        ),
      ) as _i2.KakaoRestApi);
  @override
  _i5.Future<_i3.KakaoImageSearchResponse> getImages({
    required String? query,
    _i3.KakaoImageSearchSort? sort = _i3.KakaoImageSearchSort.accuracy,
    int? page = 1,
    int? size = 30,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getImages,
          [],
          {
            #query: query,
            #sort: sort,
            #page: page,
            #size: size,
          },
        ),
        returnValue: _i5.Future<_i3.KakaoImageSearchResponse>.value(
            _FakeKakaoImageSearchResponse_1(
          this,
          Invocation.method(
            #getImages,
            [],
            {
              #query: query,
              #sort: sort,
              #page: page,
              #size: size,
            },
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.KakaoImageSearchResponse>.value(
                _FakeKakaoImageSearchResponse_1(
          this,
          Invocation.method(
            #getImages,
            [],
            {
              #query: query,
              #sort: sort,
              #page: page,
              #size: size,
            },
          ),
        )),
      ) as _i5.Future<_i3.KakaoImageSearchResponse>);
}
